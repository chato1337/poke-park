{"version":3,"sources":["context/PokemonContext.js","components/PokeDex/PokeDexDisplay.jsx","constants/main_constants.js","components/PokeDex/index.jsx","components/Pokemon/index.jsx","components/PokemonList/index.jsx","context/PokemonReducer.js","context/PokemonState.js","App.js","reportWebVitals.js","index.js"],"names":["PokemonContext","React","createContext","PokeDexDisplay","pokemonSelected","useContext","className","src","sprites","front_default","alt","name","title","abilities","map","ab","ability","slot","PokeApi","SHOW_LIST","NUM_LIST","SINGLE_POKE","PokeDex","useState","showHideState","setShowHideState","getPokemon","onClick","randomNumber","Math","floor","random","url","handleRandom","e","Pokemon","pokemonState","setPokemonState","useEffect","axios","get","then","response","data","catch","error","console","log","PokemonList","getPokemons","pokemonList","pokemon","handleClick","state","action","payload","type","PokemonState","props","useReducer","PokemonReducer","dispatch","a","res","results","Provider","value","children","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3e8de61d.chunk.js","sourcesContent":["import React from 'react'\n\nconst PokemonContext = React.createContext(null)\n\nexport default PokemonContext","import React, {useContext} from 'react'\nimport PokemonContext from '../../context/PokemonContext'\n\nconst PokeDexDisplay = () => {\n    const {pokemonSelected} = useContext(PokemonContext)\n    \n    return (\n\t\t\t<div className=\"display-container\">\n\t\t\t\t<div className=\"display-image\">\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc={pokemonSelected.sprites.front_default}\n\t\t\t\t\t\talt={pokemonSelected.name}\n\t\t\t\t\t\ttitle={pokemonSelected.name}\n\t\t\t\t\t/>\n\t\t\t\t\t<span>{pokemonSelected.name}</span>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"display-info\">\n\t\t\t\t\t<ul>\n                        {\n                            pokemonSelected.abilities.map(ab => {\n                                return (\n                                    <li key={ab.slot}>{ab.ability.name}</li>\n                                )\n                            })\n                        }\n                    </ul>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n}\n\nexport default PokeDexDisplay\n","export default class PokeApi {\n\tstatic SHOW_LIST = \"https://pokeapi.co/api/v2/pokemon?limit=\";\n\tstatic NUM_LIST = 50;\n\tstatic SINGLE_POKE = \"https://pokeapi.co/api/v2/pokemon/\";\n}","import React, {useState, useContext} from 'react'\nimport PokemonContext from '../../context/PokemonContext';\nimport PokeDexDisplay from './PokeDexDisplay';\nimport './pokedex_styles.scss'\nimport PokeApi from '../../constants/main_constants'\n\nconst PokeDex = () => {\n    const [showHideState, setShowHideState] = useState(false);\n\tconst {pokemonSelected, getPokemon} = useContext(PokemonContext)\n\n    const handleClick = () => {\n\t\t\tsetShowHideState(!showHideState);\n\t\t};\n\n\tconst handleRandom = () => {\n\t\tlet randomNumber = Math.floor(Math.random()*50)\n\t\tlet url = `${PokeApi.SINGLE_POKE}${randomNumber}/`;\n\t\tgetPokemon({url: url})\n\t}\n\n\tconst handleNav = (num) => {\n\t\t\n\t}\n\n    return (\n\t\t\t<div\n\t\t\t\tclassName={\n\t\t\t\t\tshowHideState ? \"pokedex-container show\" : \"pokedex-container hide\"\n\t\t\t\t}\n\t\t\t>\n\t\t\t\t<div className=\"pokedex\">\n\t\t\t\t\t<div className=\"pokedex__display\">\n\t\t\t\t\t\t{pokemonSelected ? (\n\t\t\t\t\t\t\t<PokeDexDisplay />\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<h2>selecciona un poke-mondongo para empezar</h2>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"pokedex__buttons\">\n\t\t\t\t\t\t<button onClick={() => handleRandom()}>Random pokemon</button>\n\t\t\t\t\t\t<button>next</button>\n\t\t\t\t\t\t<button>prev</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div onClick={(e) => handleClick()} className=\"tab-view\">\n\t\t\t\t\t{showHideState ? \"hide\" : \"show\"}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n}\n\nexport default PokeDex\n","import axios from 'axios'\nimport React, {useEffect, useState} from 'react'\nimport {BiLoader} from 'react-icons/bi'\n\nconst Pokemon = ({name, url}) => {\n    const [pokemonState, setPokemonState] = useState({\n\t\t\tsprites: {\n\t\t\t\tfront_default:\n\t\t\t\t\t\"https://media3.giphy.com/media/3oEjI6SIIHBdRxXI40/200.gif\",\n\t\t\t},\n\t\t});\n        \n    useEffect(() => {\n        axios.get(url)\n            .then(response => {\n                setPokemonState(response.data);\n            })\n            .catch(error => console.log(error))\n    }, [])\n\n    return (\n\t\t\t<div>\n                    <img src={pokemonState.sprites.front_default} alt={name} />\n\t\t\t</div>\n\t\t);\n}\n\nexport default Pokemon\n","import React, {useContext, useEffect} from 'react'\nimport Pokemon from '../Pokemon'\nimport './pokemon-list_styles.scss'\nimport PokemonContext from '../../context/PokemonContext'\n\nconst PokemonList = () => {    \n    const { \n        getPokemon,\n        getPokemons,\n        pokemonList\n    } = useContext(PokemonContext);\n\n    useEffect(() => {\n        getPokemons();\n    }, [])\n\n    const handleClick = pokemon => {\n        getPokemon(pokemon)\n    }\n\n    return (\n        <div className=\"pokemon-list\">\n            {\n                pokemonList.map(pokemon => {\n                    return (\n                        <div onClick={() => handleClick(pokemon)} key={pokemon.name} className=\"poke-item\">\n                            <Pokemon name={pokemon.name} url={pokemon.url} />\n                        </div>\n                    )\n                })\n            }\n        </div>\n    )\n}\n\nexport default PokemonList\n","export default function (state, action) {\n    const {payload, type} = action\n\n    switch(type) {\n        case 'GET_POKEMONS':\n            return {\n                ...state,\n                pokemonList: payload\n            }\n        case 'GET_POKEMON':\n            return {\n                ...state,\n                pokemonSelected: payload\n            }\n        default:\n            return state;\n    }\n}","import React, {useReducer} from 'react'\nimport PokemonReducer from './PokemonReducer'\nimport PokemonContext from './PokemonContext'\nimport axios from 'axios';\n\nconst PokemonState = (props) => {\n    const initialState = {\n\t\t\tpokemonList: [],\n\t\t\tpokemonSelected: null,\n\t\t};\n    const [state, dispatch] = useReducer(PokemonReducer, initialState)\n    const getPokemons = async () => {\n        const res = await axios.get(\"https://pokeapi.co/api/v2/pokemon?limit=50\");\n        // let pokeData = []\n        // res.data.results.forEach(async poke => {\n        //     const pokeObj = await axios.get(poke.url)\n        //     pokeData.push(pokeObj.data)\n        // });\n\n        dispatch({\n            type: 'GET_POKEMONS',\n            payload: res.data.results\n        })\n    }\n    const getPokemon = async pokemon => {\n        console.log(pokemon);\n        const res = await axios.get(pokemon.url)\n        \n        dispatch({\n            type: 'GET_POKEMON',\n            payload: res.data\n        })\n    };\n    return (\n        <PokemonContext.Provider value={{ \n            pokemonList: state.pokemonList,\n            pokemonSelected: state.pokemonSelected,\n            getPokemon,\n            getPokemons\n        }}>\n            {props.children}\n        </PokemonContext.Provider>\n    )\n}\n\nexport default PokemonState\n","import './App.css';\nimport PokeDex from './components/PokeDex';\nimport PokemonList from './components/PokemonList';\nimport PokemonState from './context/PokemonState'\n\nfunction App() {\n  return (\n      <PokemonState>\n        <h1>poke-mondongo</h1>\n        <PokeDex />\n        <PokemonList />\n      </PokemonState>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}